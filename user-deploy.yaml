apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend-user
  name: backend-user
spec:
  replicas: 1
  selector: 
    matchLabels: 
      app: backend-user
  template:
    metadata:
      labels:
        app: backend-user
    spec:
      containers:
      - image: docker.io/lalanura/udagram-api-user:v1
        name: backend-user 
        ports:
        - containerPort: 8080
        imagePullPolicy: Always  
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"      
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name:  udagramdb-env
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name:  udagramdb-env
              key: POSTGRES_PASSWORD
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name:  udagram-env
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name:  udagram-env
              key: POSTGRES_DB
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name:  udagram-env
              key: AWS_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name:  udagram-env
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name:  udagram-env
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name:  udagram-env
              key: JWT_SECRET
        - name: URL
          valueFrom:
            configMapKeyRef:
              name:  udagram-env
              key: URL
        volumeMounts:
          - name: aws-secret
            mountPath: "/root/.aws/"
            readOnly: true
      volumes:
        - name: aws-secret
          secret: 
            secretName: aws-secret 
            optional: false